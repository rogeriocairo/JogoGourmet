@model List<JogosGourmet.Models.Pergunta>
@{
    ViewData["Title"] = "Home Page";
}

@using (Html.BeginForm(FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    <div class="form-group ">
        @for (int i = 0; i < Model.Count; i++)
        {
            <div id="row_@Model[i].Id" class="@(Model[i].Id == (Guid)ViewData["resposta"] ? "visible-item" : "d-none")">
                @Html.HiddenFor(x => Model[i].Id)
                @Html.HiddenFor(x => Model[i].RespostaId)
                @Html.HiddenFor(x => Model[i].FormatacaoPergunta)
                @Html.HiddenFor(x => Model[i].RespostaType)
                @Html.HiddenFor(x => Model[i].Enunciado)

                @Html.DisplayFor(x => Model[i].Enunciado, new { @class = "name" })

                <div>
                    @switch (Model[i].FormatacaoPergunta)
                    {
                        case "OK":
                            <button type="submit" id="BotaoOK" name="BotaoOK" class="btn btn-primary" formaction="/Home/Post?codigoId=@Model[i].Id">OK</button>
                            break;
                        case "SimNao":
                            <button type="submit" id="BotaoSim" name="BotaoSim" class="btn btn-primary" formaction="/Home/Post?codigoId=@Model[i].Id" value="@Model[i].Id">Sim</button>
                            <button type="submit" id="BotaoNao" name="BotaoNao" class="btn btn-primary" formaction="/Home/Post?codigoId=@Model[i].Id" value="@Model[i].Id">Não</button>
                            break;
                        case "Cancelar":
                            break;
                        case "Finalizar":
                            <button type="submit" id="BotaoOK" name="BotaoOK" class="btn btn-primary" formaction="/Home">OK</button>
                            break;
                    }
                </div>
            </div>
        }
    </div>
}
